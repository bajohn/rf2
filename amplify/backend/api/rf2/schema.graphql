

type Room @model
  @key(fields: ["id"])
  {
  id: ID!
  players: [Player] @connection(keyName: "cardsByRoom", fields: ["roomId"])
  card: [Card] @connection(keyName: "playersByRoom", fields: ["roomId"])

}


type Moveable @model
  @key(fields: ["id"])
  {
    id: ID! 
    draggable: String
    x: Int! 
    y: Int! 
    z: Int!
    lastOwner: String!
    inMotion: Boolean! 
}

type Card @model
  @key(fields: ["id"])
  @key(name: "cardsByRoom", fields: ["roomId"], queryField: "cardsByRoom")
  {
  id: ID!
  roomId: ID!
  owner: ID!
  faceUp: Boolean!
  cardValue: String!
  moveable: Moveable @connection(keyName: "id", fields: ["id"])
}

type Player @model
  @key(fields: ["id"])
  @key(name: "playersByRoom", fields: ["roomId"], queryField: "playersByRoom")
  {
  id: ID!
  roomId: ID!
  name: String!
  moveable: Moveable @connection(keyName: "id", fields: ["id"])
}

# Next up:
# type CardStack @model
#   @key(fields: ["id"])
#   @key(name: "cardStacksByRoom", fields: ["roomId"], queryField: "cardStacksByRoom")
#   {
#   id: ID!
#   roomId: ID!
#   spread: Boolean!
#   moveable: Moveable @connection(keyName: "id", fields: ["id"])
#   card: [Card] @connection(keyName: "playersByRoom", fields: ["roomId"])
# }

